{
    "swagger": "2.0",
    "info": {
        "title": "OFFLINE LMS Services API",
        "description": "OFFLINE LMS Services",
        "version": "v1"
    },
    "host": "gapslmsservices.herokuapp.com",
    "schemes": [
        "http"
    ],
    "basePath": "/",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "securityDefinitions": {
        "Basic": {
            "type": "basic"
        }
    },
    "security": [
        {
            "Basic": []
        }
    ],
    "paths": {
        "/lms/api/all-questions/": {
            "get": {
                "operationId": "lms_api_all-questions_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Question"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": []
        },
        "/lms/api/all-responses/": {
            "get": {
                "operationId": "lms_api_all-responses_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Response"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": []
        },
        "/lms/api/bookmark/{id}/": {
            "get": {
                "operationId": "lms_api_bookmark_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BookMark"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this book mark.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/lms/api/bookmarks/": {
            "get": {
                "operationId": "lms_api_bookmarks_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/BookMark"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": []
        },
        "/lms/api/bookmarks/{user_id}/": {
            "get": {
                "operationId": "lms_api_bookmarks_read",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/BookMark"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "user_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/lms/api/course-content/{id}/": {
            "get": {
                "operationId": "lms_api_course-content_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CourseContent"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this course.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/lms/api/course-ids/{id}/": {
            "get": {
                "operationId": "lms_api_course-ids_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CourseId"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this course.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/lms/api/course-responses/{course_id}/": {
            "get": {
                "operationId": "lms_api_course-responses_read",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Response"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "course_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/lms/api/course/{id}/": {
            "get": {
                "operationId": "lms_api_course_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Course"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this course.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/lms/api/courses/": {
            "get": {
                "operationId": "lms_api_courses_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Course"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": []
        },
        "/lms/api/courses/{institution_id}/": {
            "get": {
                "operationId": "lms_api_courses_read",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Course"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "institution_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/lms/api/create/bookmark/": {
            "post": {
                "operationId": "lms_api_create_bookmark_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BookMark"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BookMark"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": []
        },
        "/lms/api/create/course/": {
            "post": {
                "operationId": "lms_api_create_course_create",
                "description": "",
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "maxLength": 150,
                        "minLength": 1
                    },
                    {
                        "name": "code",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "maxLength": 10,
                        "minLength": 1
                    },
                    {
                        "name": "run",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "maxLength": 150,
                        "x-nullable": true
                    },
                    {
                        "name": "card_image",
                        "in": "formData",
                        "required": false,
                        "type": "file",
                        "x-nullable": true
                    },
                    {
                        "name": "intro_video",
                        "in": "formData",
                        "required": false,
                        "type": "file",
                        "x-nullable": true
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "maxLength": 150,
                        "x-nullable": true
                    },
                    {
                        "name": "overview",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "maxLength": 250,
                        "x-nullable": true
                    },
                    {
                        "name": "learning_expectation",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "maxLength": 250,
                        "x-nullable": true
                    },
                    {
                        "name": "curriculum",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "maxLength": 250,
                        "x-nullable": true
                    },
                    {
                        "name": "level",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "enum": [
                            1,
                            2,
                            3
                        ]
                    },
                    {
                        "name": "enrolment_type",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    {
                        "name": "entrance_exam_required",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "cost",
                        "in": "formData",
                        "required": false,
                        "type": "number",
                        "x-nullable": true
                    },
                    {
                        "name": "auditing",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "course_pacing",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    {
                        "name": "course_start_date_time",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "x-nullable": true
                    },
                    {
                        "name": "course_end_date_time",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "x-nullable": true
                    },
                    {
                        "name": "enrolment_start_date_time",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "x-nullable": true
                    },
                    {
                        "name": "enrolment_end_date_time",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "x-nullable": true
                    },
                    {
                        "name": "course_language",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                        ]
                    },
                    {
                        "name": "requirement_hours_per_week",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "x-nullable": true
                    },
                    {
                        "name": "requirement_no_of_week",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "x-nullable": true
                    },
                    {
                        "name": "grace_period_after_deadline",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "x-nullable": true
                    },
                    {
                        "name": "publication_status",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "enum": [
                            1,
                            2,
                            3,
                            4
                        ]
                    },
                    {
                        "name": "institution",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "author",
                        "in": "formData",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "prerequisite",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "uniqueItems": true
                    },
                    {
                        "name": "authoring_team",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "uniqueItems": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Course"
                        }
                    }
                },
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "lms"
                ]
            },
            "parameters": []
        },
        "/lms/api/create/discussion-component/": {
            "post": {
                "operationId": "lms_api_create_discussion-component_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DiscussionComponent"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DiscussionComponent"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": []
        },
        "/lms/api/create/gaps-group/": {
            "post": {
                "operationId": "lms_api_create_gaps-group_create",
                "description": "",
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "maxLength": 150,
                        "minLength": 1
                    },
                    {
                        "name": "group_type",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "enum": [
                            1,
                            2,
                            3
                        ]
                    },
                    {
                        "name": "course",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "uuid",
                        "x-nullable": true
                    },
                    {
                        "name": "members",
                        "in": "formData",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "uniqueItems": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GapsGroup"
                        }
                    }
                },
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "lms"
                ]
            },
            "parameters": []
        },
        "/lms/api/create/html-component/": {
            "post": {
                "operationId": "lms_api_create_html-component_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HTMLComponent"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/HTMLComponent"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": []
        },
        "/lms/api/create/institution/": {
            "post": {
                "operationId": "lms_api_create_institution_create",
                "description": "",
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "maxLength": 150,
                        "minLength": 1
                    },
                    {
                        "name": "code",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "maxLength": 150,
                        "x-nullable": true
                    },
                    {
                        "name": "admin",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "uuid",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Institution"
                        }
                    }
                },
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "lms"
                ]
            },
            "parameters": []
        },
        "/lms/api/create/lesson/": {
            "post": {
                "operationId": "lms_api_create_lesson_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Lesson"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Lesson"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": []
        },
        "/lms/api/create/problem-component/": {
            "post": {
                "operationId": "lms_api_create_problem-component_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProblemComponent"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProblemComponent"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": []
        },
        "/lms/api/create/question/": {
            "post": {
                "operationId": "lms_api_create_question_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Question"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Question"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": []
        },
        "/lms/api/create/resource/": {
            "post": {
                "operationId": "lms_api_create_resource_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Resource"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Resource"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": []
        },
        "/lms/api/create/response-sheet/": {
            "post": {
                "operationId": "lms_api_create_response-sheet_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ResponseSheet"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ResponseSheet"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": []
        },
        "/lms/api/create/section/": {
            "post": {
                "operationId": "lms_api_create_section_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Section"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Section"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": []
        },
        "/lms/api/create/subsection/": {
            "post": {
                "operationId": "lms_api_create_subsection_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubSection"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SubSection"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": []
        },
        "/lms/api/create/video-component/": {
            "post": {
                "operationId": "lms_api_create_video-component_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VideoComponent"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/VideoComponent"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": []
        },
        "/lms/api/delete/bookmark/{id}/": {
            "delete": {
                "operationId": "lms_api_delete_bookmark_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this book mark.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/lms/api/delete/course/{id}/": {
            "delete": {
                "operationId": "lms_api_delete_course_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this course.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/lms/api/delete/discussion-component/{id}/": {
            "delete": {
                "operationId": "lms_api_delete_discussion-component_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this discussion component.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/lms/api/delete/gaps-group/{id}/": {
            "delete": {
                "operationId": "lms_api_delete_gaps-group_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this gaps group.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/lms/api/delete/html-component/{id}/": {
            "delete": {
                "operationId": "lms_api_delete_html-component_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this html component.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/lms/api/delete/institution/{id}/": {
            "delete": {
                "operationId": "lms_api_delete_institution_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this institution.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/lms/api/delete/lesson/{id}/": {
            "delete": {
                "operationId": "lms_api_delete_lesson_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this lesson.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/lms/api/delete/message/{id}/": {
            "delete": {
                "operationId": "lms_api_delete_message_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this message.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/lms/api/delete/problem-component/{id}/": {
            "delete": {
                "operationId": "lms_api_delete_problem-component_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this problem component.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/lms/api/delete/question/{id}/": {
            "delete": {
                "operationId": "lms_api_delete_question_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this question.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/lms/api/delete/resource/{id}/": {
            "delete": {
                "operationId": "lms_api_delete_resource_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/lms/api/delete/response-sheet/{id}/": {
            "delete": {
                "operationId": "lms_api_delete_response-sheet_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this response.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/lms/api/delete/section/{id}/": {
            "delete": {
                "operationId": "lms_api_delete_section_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this section.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/lms/api/delete/subsection/{id}/": {
            "delete": {
                "operationId": "lms_api_delete_subsection_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this sub section.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/lms/api/delete/video-component/{id}/": {
            "delete": {
                "operationId": "lms_api_delete_video-component_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this video component.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/lms/api/discussion-component/{id}/": {
            "get": {
                "operationId": "lms_api_discussion-component_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DiscussionComponent"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this discussion component.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/lms/api/discussion-components/": {
            "get": {
                "operationId": "lms_api_discussion-components_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DiscussionComponent"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": []
        },
        "/lms/api/gaps-group/{id}/": {
            "get": {
                "operationId": "lms_api_gaps-group_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GapsGroup"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this gaps group.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/lms/api/gaps-groups/": {
            "get": {
                "operationId": "lms_api_gaps-groups_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/GapsGroup"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": []
        },
        "/lms/api/html-component/{id}/": {
            "get": {
                "operationId": "lms_api_html-component_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/HTMLComponent"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this component.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/lms/api/html-components/": {
            "get": {
                "operationId": "lms_api_html-components_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/HTMLComponent"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": []
        },
        "/lms/api/institution/{id}/": {
            "get": {
                "operationId": "lms_api_institution_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Institution"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this institution.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/lms/api/institutions/": {
            "get": {
                "operationId": "lms_api_institutions_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Institution"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": []
        },
        "/lms/api/lesson-discussion-components/{lesson_id}/": {
            "get": {
                "operationId": "lms_api_lesson-discussion-components_read",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DiscussionComponent"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "lesson_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/lms/api/lesson-html-components/{lesson_id}/": {
            "get": {
                "operationId": "lms_api_lesson-html-components_read",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/HTMLComponent"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "lesson_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/lms/api/lesson-problem-components/{lesson_id}/": {
            "get": {
                "operationId": "lms_api_lesson-problem-components_read",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ProblemComponent"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "lesson_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/lms/api/lesson-video-components/{lesson_id}/": {
            "get": {
                "operationId": "lms_api_lesson-video-components_read",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/VideoComponent"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "lesson_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/lms/api/lesson/{id}/": {
            "get": {
                "operationId": "lms_api_lesson_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Lesson"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this lesson.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/lms/api/lessons/": {
            "get": {
                "operationId": "lms_api_lessons_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Lesson"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": []
        },
        "/lms/api/lessons/{subsection_id}/": {
            "get": {
                "operationId": "lms_api_lessons_read",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Lesson"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "subsection_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/lms/api/like/{id}/": {
            "get": {
                "operationId": "lms_api_like_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Like"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this like.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/lms/api/likes/{message_id}/": {
            "get": {
                "operationId": "lms_api_likes_read",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Like"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "message_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/lms/api/message/{id}/": {
            "get": {
                "operationId": "lms_api_message_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Message"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this message.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/lms/api/messages/": {
            "get": {
                "operationId": "lms_api_messages_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Message"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": []
        },
        "/lms/api/messages/{discussion_id}/": {
            "get": {
                "operationId": "lms_api_messages_read",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Message"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "discussion_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/lms/api/problem-component/{id}/": {
            "get": {
                "operationId": "lms_api_problem-component_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProblemComponent"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this problem component.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/lms/api/problem-components/": {
            "get": {
                "operationId": "lms_api_problem-components_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ProblemComponent"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": []
        },
        "/lms/api/question/{id}/": {
            "get": {
                "operationId": "lms_api_question_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Question"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this question.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/lms/api/questions/{problem_component_id}/": {
            "get": {
                "operationId": "lms_api_questions_read",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Question"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "problem_component_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/lms/api/resource/{id}/": {
            "get": {
                "operationId": "lms_api_resource_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Resource"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/lms/api/resources-by-author/{author_id}/": {
            "get": {
                "operationId": "lms_api_resources-by-author_read",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Resource"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "author_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/lms/api/resources-by-course/{course_id}/": {
            "get": {
                "operationId": "lms_api_resources-by-course_read",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Resource"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "course_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/lms/api/resources/": {
            "get": {
                "operationId": "lms_api_resources_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Resource"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": []
        },
        "/lms/api/response-sheet/{id}/": {
            "get": {
                "operationId": "lms_api_response-sheet_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this response.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/lms/api/section/{id}/": {
            "get": {
                "operationId": "lms_api_section_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Section"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this section.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/lms/api/sections/": {
            "get": {
                "operationId": "lms_api_sections_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Section"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": []
        },
        "/lms/api/sections/{course_id}/": {
            "get": {
                "operationId": "lms_api_sections_read",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Section"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "course_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/lms/api/student-course-responses/{student_id}/{course_id}/": {
            "get": {
                "operationId": "lms_api_student-course-responses_read",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Response"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "course_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "student_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/lms/api/student-responses/{student_id}/": {
            "get": {
                "operationId": "lms_api_student-responses_read",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Response"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "student_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/lms/api/subsection/{id}/": {
            "get": {
                "operationId": "lms_api_subsection_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SubSection"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this sub section.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/lms/api/subsections/": {
            "get": {
                "operationId": "lms_api_subsections_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SubSection"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": []
        },
        "/lms/api/subsections/{section_id}/": {
            "get": {
                "operationId": "lms_api_subsections_read",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SubSection"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "section_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/lms/api/update/bookmark/{id}/": {
            "get": {
                "operationId": "lms_api_update_bookmark_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BookMark"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "put": {
                "operationId": "lms_api_update_bookmark_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BookMark"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BookMark"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "patch": {
                "operationId": "lms_api_update_bookmark_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BookMark"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BookMark"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this book mark.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/lms/api/update/course/{id}/": {
            "get": {
                "operationId": "lms_api_update_course_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Course"
                        }
                    }
                },
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "lms"
                ]
            },
            "put": {
                "operationId": "lms_api_update_course_update",
                "description": "",
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "maxLength": 150,
                        "minLength": 1
                    },
                    {
                        "name": "code",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "maxLength": 10,
                        "minLength": 1
                    },
                    {
                        "name": "run",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "maxLength": 150,
                        "x-nullable": true
                    },
                    {
                        "name": "card_image",
                        "in": "formData",
                        "required": false,
                        "type": "file",
                        "x-nullable": true
                    },
                    {
                        "name": "intro_video",
                        "in": "formData",
                        "required": false,
                        "type": "file",
                        "x-nullable": true
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "maxLength": 150,
                        "x-nullable": true
                    },
                    {
                        "name": "overview",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "maxLength": 250,
                        "x-nullable": true
                    },
                    {
                        "name": "learning_expectation",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "maxLength": 250,
                        "x-nullable": true
                    },
                    {
                        "name": "curriculum",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "maxLength": 250,
                        "x-nullable": true
                    },
                    {
                        "name": "level",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "enum": [
                            1,
                            2,
                            3
                        ]
                    },
                    {
                        "name": "enrolment_type",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    {
                        "name": "entrance_exam_required",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "cost",
                        "in": "formData",
                        "required": false,
                        "type": "number",
                        "x-nullable": true
                    },
                    {
                        "name": "auditing",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "course_pacing",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    {
                        "name": "course_start_date_time",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "x-nullable": true
                    },
                    {
                        "name": "course_end_date_time",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "x-nullable": true
                    },
                    {
                        "name": "enrolment_start_date_time",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "x-nullable": true
                    },
                    {
                        "name": "enrolment_end_date_time",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "x-nullable": true
                    },
                    {
                        "name": "course_language",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                        ]
                    },
                    {
                        "name": "requirement_hours_per_week",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "x-nullable": true
                    },
                    {
                        "name": "requirement_no_of_week",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "x-nullable": true
                    },
                    {
                        "name": "grace_period_after_deadline",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "x-nullable": true
                    },
                    {
                        "name": "publication_status",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "enum": [
                            1,
                            2,
                            3,
                            4
                        ]
                    },
                    {
                        "name": "institution",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "author",
                        "in": "formData",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "prerequisite",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "uniqueItems": true
                    },
                    {
                        "name": "authoring_team",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "uniqueItems": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Course"
                        }
                    }
                },
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "lms"
                ]
            },
            "patch": {
                "operationId": "lms_api_update_course_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "maxLength": 150,
                        "minLength": 1
                    },
                    {
                        "name": "code",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "maxLength": 10,
                        "minLength": 1
                    },
                    {
                        "name": "run",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "maxLength": 150,
                        "x-nullable": true
                    },
                    {
                        "name": "card_image",
                        "in": "formData",
                        "required": false,
                        "type": "file",
                        "x-nullable": true
                    },
                    {
                        "name": "intro_video",
                        "in": "formData",
                        "required": false,
                        "type": "file",
                        "x-nullable": true
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "maxLength": 150,
                        "x-nullable": true
                    },
                    {
                        "name": "overview",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "maxLength": 250,
                        "x-nullable": true
                    },
                    {
                        "name": "learning_expectation",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "maxLength": 250,
                        "x-nullable": true
                    },
                    {
                        "name": "curriculum",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "maxLength": 250,
                        "x-nullable": true
                    },
                    {
                        "name": "level",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "enum": [
                            1,
                            2,
                            3
                        ]
                    },
                    {
                        "name": "enrolment_type",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    {
                        "name": "entrance_exam_required",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "cost",
                        "in": "formData",
                        "required": false,
                        "type": "number",
                        "x-nullable": true
                    },
                    {
                        "name": "auditing",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "course_pacing",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    },
                    {
                        "name": "course_start_date_time",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "x-nullable": true
                    },
                    {
                        "name": "course_end_date_time",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "x-nullable": true
                    },
                    {
                        "name": "enrolment_start_date_time",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "x-nullable": true
                    },
                    {
                        "name": "enrolment_end_date_time",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "x-nullable": true
                    },
                    {
                        "name": "course_language",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                        ]
                    },
                    {
                        "name": "requirement_hours_per_week",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "x-nullable": true
                    },
                    {
                        "name": "requirement_no_of_week",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "x-nullable": true
                    },
                    {
                        "name": "grace_period_after_deadline",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "x-nullable": true
                    },
                    {
                        "name": "publication_status",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "enum": [
                            1,
                            2,
                            3,
                            4
                        ]
                    },
                    {
                        "name": "institution",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "author",
                        "in": "formData",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "prerequisite",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "uniqueItems": true
                    },
                    {
                        "name": "authoring_team",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "uniqueItems": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Course"
                        }
                    }
                },
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this course.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/lms/api/update/discussion-component/{id}/": {
            "get": {
                "operationId": "lms_api_update_discussion-component_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DiscussionComponent"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "put": {
                "operationId": "lms_api_update_discussion-component_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DiscussionComponent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DiscussionComponent"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "patch": {
                "operationId": "lms_api_update_discussion-component_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DiscussionComponent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DiscussionComponent"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this discussion component.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/lms/api/update/gaps-group/{id}/": {
            "get": {
                "operationId": "lms_api_update_gaps-group_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GapsGroup"
                        }
                    }
                },
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "lms"
                ]
            },
            "put": {
                "operationId": "lms_api_update_gaps-group_update",
                "description": "",
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "maxLength": 150,
                        "minLength": 1
                    },
                    {
                        "name": "group_type",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "enum": [
                            1,
                            2,
                            3
                        ]
                    },
                    {
                        "name": "course",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "uuid",
                        "x-nullable": true
                    },
                    {
                        "name": "members",
                        "in": "formData",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "uniqueItems": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GapsGroup"
                        }
                    }
                },
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "lms"
                ]
            },
            "patch": {
                "operationId": "lms_api_update_gaps-group_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "maxLength": 150,
                        "minLength": 1
                    },
                    {
                        "name": "group_type",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "enum": [
                            1,
                            2,
                            3
                        ]
                    },
                    {
                        "name": "course",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "uuid",
                        "x-nullable": true
                    },
                    {
                        "name": "members",
                        "in": "formData",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "uniqueItems": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GapsGroup"
                        }
                    }
                },
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this gaps group.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/lms/api/update/html-component/{id}/": {
            "get": {
                "operationId": "lms_api_update_html-component_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/HTMLComponent"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "put": {
                "operationId": "lms_api_update_html-component_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HTMLComponent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/HTMLComponent"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "patch": {
                "operationId": "lms_api_update_html-component_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HTMLComponent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/HTMLComponent"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this html component.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/lms/api/update/institution/{id}/": {
            "get": {
                "operationId": "lms_api_update_institution_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Institution"
                        }
                    }
                },
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "lms"
                ]
            },
            "put": {
                "operationId": "lms_api_update_institution_update",
                "description": "",
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "maxLength": 150,
                        "minLength": 1
                    },
                    {
                        "name": "code",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "maxLength": 150,
                        "x-nullable": true
                    },
                    {
                        "name": "admin",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "uuid",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Institution"
                        }
                    }
                },
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "lms"
                ]
            },
            "patch": {
                "operationId": "lms_api_update_institution_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "maxLength": 150,
                        "minLength": 1
                    },
                    {
                        "name": "code",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "maxLength": 150,
                        "x-nullable": true
                    },
                    {
                        "name": "admin",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "uuid",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Institution"
                        }
                    }
                },
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this institution.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/lms/api/update/lesson/{id}/": {
            "get": {
                "operationId": "lms_api_update_lesson_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Lesson"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "put": {
                "operationId": "lms_api_update_lesson_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Lesson"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Lesson"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "patch": {
                "operationId": "lms_api_update_lesson_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Lesson"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Lesson"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this lesson.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/lms/api/update/like/{id}/": {
            "get": {
                "operationId": "lms_api_update_like_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Like"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "put": {
                "operationId": "lms_api_update_like_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Like"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Like"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "patch": {
                "operationId": "lms_api_update_like_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Like"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Like"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this like.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/lms/api/update/message/{id}/": {
            "get": {
                "operationId": "lms_api_update_message_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Message"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "put": {
                "operationId": "lms_api_update_message_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Message"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Message"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "patch": {
                "operationId": "lms_api_update_message_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Message"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Message"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this message.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/lms/api/update/problem-component/{id}/": {
            "get": {
                "operationId": "lms_api_update_problem-component_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProblemComponent"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "put": {
                "operationId": "lms_api_update_problem-component_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProblemComponent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProblemComponent"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "patch": {
                "operationId": "lms_api_update_problem-component_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProblemComponent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProblemComponent"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this problem component.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/lms/api/update/question/{id}/": {
            "get": {
                "operationId": "lms_api_update_question_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Question"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "put": {
                "operationId": "lms_api_update_question_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Question"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Question"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "patch": {
                "operationId": "lms_api_update_question_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Question"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Question"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this question.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/lms/api/update/resource/{id}/": {
            "get": {
                "operationId": "lms_api_update_resource_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Resource"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "put": {
                "operationId": "lms_api_update_resource_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Resource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Resource"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "patch": {
                "operationId": "lms_api_update_resource_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Resource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Resource"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/lms/api/update/response-sheet/{id}/": {
            "get": {
                "operationId": "lms_api_update_response-sheet_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ResponseSheet"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "put": {
                "operationId": "lms_api_update_response-sheet_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ResponseSheet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ResponseSheet"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "patch": {
                "operationId": "lms_api_update_response-sheet_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ResponseSheet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ResponseSheet"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this response.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/lms/api/update/section/{id}/": {
            "get": {
                "operationId": "lms_api_update_section_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Section"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "put": {
                "operationId": "lms_api_update_section_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Section"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Section"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "patch": {
                "operationId": "lms_api_update_section_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Section"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Section"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this section.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/lms/api/update/subsection/{id}/": {
            "get": {
                "operationId": "lms_api_update_subsection_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SubSection"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "put": {
                "operationId": "lms_api_update_subsection_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubSection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SubSection"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "patch": {
                "operationId": "lms_api_update_subsection_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubSection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SubSection"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this sub section.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/lms/api/update/video-component/{id}/": {
            "get": {
                "operationId": "lms_api_update_video-component_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/VideoComponent"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "put": {
                "operationId": "lms_api_update_video-component_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VideoComponent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/VideoComponent"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "patch": {
                "operationId": "lms_api_update_video-component_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VideoComponent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/VideoComponent"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this video component.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/lms/api/video-component/{id}/": {
            "get": {
                "operationId": "lms_api_video-component_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/VideoComponent"
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this video component.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/lms/api/video-components/": {
            "get": {
                "operationId": "lms_api_video-components_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/VideoComponent"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lms"
                ]
            },
            "parameters": []
        },
        "/profile-resource/api/author-profile/{profile}/": {
            "get": {
                "operationId": "profile-resource_api_author-profile_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ReadAuthorProfile"
                        }
                    }
                },
                "tags": [
                    "profile-resource"
                ]
            },
            "parameters": [
                {
                    "name": "profile",
                    "in": "path",
                    "description": "A unique value identifying this author profile.",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/profile-resource/api/author-profiles/": {
            "get": {
                "operationId": "profile-resource_api_author-profiles_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ReadAuthorProfile"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "profile-resource"
                ]
            },
            "parameters": []
        },
        "/profile-resource/api/create/author-profile/": {
            "post": {
                "operationId": "profile-resource_api_create_author-profile_create",
                "description": "",
                "parameters": [
                    {
                        "name": "profile",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "institution",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "uuid",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AuthorProfile"
                        }
                    }
                },
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "profile-resource"
                ]
            },
            "parameters": []
        },
        "/profile-resource/api/create/student-profile/": {
            "post": {
                "operationId": "profile-resource_api_create_student-profile_create",
                "description": "",
                "parameters": [
                    {
                        "name": "profile",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/StudentProfile"
                        }
                    }
                },
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "profile-resource"
                ]
            },
            "parameters": []
        },
        "/profile-resource/api/create/user-profile/": {
            "post": {
                "operationId": "profile-resource_api_create_user-profile_create",
                "description": "",
                "parameters": [
                    {
                        "name": "email",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "format": "email",
                        "maxLength": 254,
                        "minLength": 1
                    },
                    {
                        "name": "first_name",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "maxLength": 150,
                        "x-nullable": true
                    },
                    {
                        "name": "last_name",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "maxLength": 150,
                        "x-nullable": true
                    },
                    {
                        "name": "phone_number",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "maxLength": 150,
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UserProfile"
                        }
                    }
                },
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "profile-resource"
                ]
            },
            "parameters": []
        },
        "/profile-resource/api/delete/author-profile/{profile}/": {
            "delete": {
                "operationId": "profile-resource_api_delete_author-profile_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "profile-resource"
                ]
            },
            "parameters": [
                {
                    "name": "profile",
                    "in": "path",
                    "description": "A unique value identifying this author profile.",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/profile-resource/api/delete/student-profile/{profile}/": {
            "delete": {
                "operationId": "profile-resource_api_delete_student-profile_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "profile-resource"
                ]
            },
            "parameters": [
                {
                    "name": "profile",
                    "in": "path",
                    "description": "A unique value identifying this student profile.",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/profile-resource/api/delete/user-profile/{id}/": {
            "delete": {
                "operationId": "profile-resource_api_delete_user-profile_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "profile-resource"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this user profile.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/profile-resource/api/student-profile/{profile}/": {
            "get": {
                "operationId": "profile-resource_api_student-profile_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ReadStudentProfile"
                        }
                    }
                },
                "tags": [
                    "profile-resource"
                ]
            },
            "parameters": [
                {
                    "name": "profile",
                    "in": "path",
                    "description": "A unique value identifying this student profile.",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/profile-resource/api/student-profiles/": {
            "get": {
                "operationId": "profile-resource_api_student-profiles_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ReadStudentProfile"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "profile-resource"
                ]
            },
            "parameters": []
        },
        "/profile-resource/api/update/author-profile/{profile}/": {
            "get": {
                "operationId": "profile-resource_api_update_author-profile_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AuthorProfile"
                        }
                    }
                },
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "profile-resource"
                ]
            },
            "put": {
                "operationId": "profile-resource_api_update_author-profile_update",
                "description": "",
                "parameters": [
                    {
                        "name": "profile",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "institution",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "uuid",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AuthorProfile"
                        }
                    }
                },
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "profile-resource"
                ]
            },
            "patch": {
                "operationId": "profile-resource_api_update_author-profile_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "profile",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "institution",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "uuid",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AuthorProfile"
                        }
                    }
                },
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "profile-resource"
                ]
            },
            "parameters": [
                {
                    "name": "profile",
                    "in": "path",
                    "description": "A unique value identifying this author profile.",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/profile-resource/api/update/student-profile/{profile}/": {
            "get": {
                "operationId": "profile-resource_api_update_student-profile_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/StudentProfile"
                        }
                    }
                },
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "profile-resource"
                ]
            },
            "put": {
                "operationId": "profile-resource_api_update_student-profile_update",
                "description": "",
                "parameters": [
                    {
                        "name": "profile",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/StudentProfile"
                        }
                    }
                },
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "profile-resource"
                ]
            },
            "patch": {
                "operationId": "profile-resource_api_update_student-profile_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "profile",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/StudentProfile"
                        }
                    }
                },
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "profile-resource"
                ]
            },
            "parameters": [
                {
                    "name": "profile",
                    "in": "path",
                    "description": "A unique value identifying this student profile.",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/profile-resource/api/update/user-profile/{id}/": {
            "get": {
                "operationId": "profile-resource_api_update_user-profile_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UserProfile"
                        }
                    }
                },
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "profile-resource"
                ]
            },
            "put": {
                "operationId": "profile-resource_api_update_user-profile_update",
                "description": "",
                "parameters": [
                    {
                        "name": "email",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "format": "email",
                        "maxLength": 254,
                        "minLength": 1
                    },
                    {
                        "name": "first_name",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "maxLength": 150,
                        "x-nullable": true
                    },
                    {
                        "name": "last_name",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "maxLength": 150,
                        "x-nullable": true
                    },
                    {
                        "name": "phone_number",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "maxLength": 150,
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UserProfile"
                        }
                    }
                },
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "profile-resource"
                ]
            },
            "patch": {
                "operationId": "profile-resource_api_update_user-profile_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "email",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "format": "email",
                        "maxLength": 254,
                        "minLength": 1
                    },
                    {
                        "name": "first_name",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "maxLength": 150,
                        "x-nullable": true
                    },
                    {
                        "name": "last_name",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "maxLength": 150,
                        "x-nullable": true
                    },
                    {
                        "name": "phone_number",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "maxLength": 150,
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UserProfile"
                        }
                    }
                },
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "profile-resource"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this user profile.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/profile-resource/api/user-profile/{id}/": {
            "get": {
                "operationId": "profile-resource_api_user-profile_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UserProfile"
                        }
                    }
                },
                "tags": [
                    "profile-resource"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this user profile.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/profile-resource/api/user-profiles/": {
            "get": {
                "operationId": "profile-resource_api_user-profiles_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UserProfile"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "profile-resource"
                ]
            },
            "parameters": []
        }
    },
    "definitions": {
        "Question": {
            "required": [
                "text",
                "required",
                "problem"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "text": {
                    "title": "Text",
                    "type": "string",
                    "minLength": 1
                },
                "required": {
                    "title": "Required",
                    "type": "boolean"
                },
                "question_type": {
                    "title": "Question type",
                    "type": "string",
                    "enum": [
                        "text",
                        "radio",
                        "select",
                        "select-multiple",
                        "integer"
                    ]
                },
                "correct_answer": {
                    "title": "Correct answer",
                    "type": "string",
                    "x-nullable": true
                },
                "choices": {
                    "title": "Choices",
                    "description": "the choices field is only used if the question type is \"radio,\" \"select,\" or \"select multiple\" provide a comma-separated list of options for this question .",
                    "type": "string",
                    "x-nullable": true
                },
                "mark": {
                    "title": "Mark",
                    "type": "number",
                    "x-nullable": true
                },
                "problem": {
                    "title": "Problem",
                    "type": "string"
                }
            }
        },
        "ProblemComponent": {
            "required": [
                "lesson"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "questions": {
                    "title": "Questions",
                    "type": "string",
                    "readOnly": true
                },
                "position_id": {
                    "title": "Position id",
                    "type": "string",
                    "maxLength": 150,
                    "x-nullable": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 150,
                    "x-nullable": true
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 150,
                    "x-nullable": true
                },
                "component_type": {
                    "title": "Component type",
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3,
                        4
                    ]
                },
                "assessment_type": {
                    "title": "Assessment type",
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3
                    ]
                },
                "assessment_weight": {
                    "title": "Assessment weight",
                    "type": "number",
                    "x-nullable": true
                },
                "assessment_attainable_score": {
                    "title": "Assessment attainable score",
                    "type": "number",
                    "x-nullable": true
                },
                "show_answers": {
                    "title": "Show answers",
                    "type": "boolean"
                },
                "due_date": {
                    "title": "Due date",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "is_timed": {
                    "title": "Is timed",
                    "type": "boolean"
                },
                "timed_duration": {
                    "title": "Timed duration",
                    "type": "number",
                    "x-nullable": true
                },
                "no_of_possible_attempts": {
                    "title": "No of possible attempts",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "create_group": {
                    "title": "Create group",
                    "type": "boolean"
                },
                "lesson": {
                    "title": "Lesson",
                    "type": "string",
                    "format": "uuid"
                },
                "course": {
                    "title": "Course",
                    "type": "string",
                    "format": "uuid",
                    "x-nullable": true
                },
                "group_passed": {
                    "title": "Group passed",
                    "type": "string",
                    "format": "uuid",
                    "x-nullable": true
                }
            }
        },
        "Response": {
            "required": [
                "problem",
                "student"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "answer_sheet": {
                    "title": "Answer sheet",
                    "type": "string",
                    "readOnly": true
                },
                "problem": {
                    "$ref": "#/definitions/ProblemComponent"
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "updated": {
                    "title": "Updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "show_weighted_score": {
                    "title": "Show weighted score",
                    "type": "boolean"
                },
                "remark": {
                    "title": "Remark",
                    "type": "string",
                    "x-nullable": true
                },
                "assessment_score": {
                    "title": "Assessment score",
                    "type": "number",
                    "x-nullable": true
                },
                "weighted_score": {
                    "title": "Weighted score",
                    "type": "number",
                    "x-nullable": true
                },
                "course": {
                    "title": "Course",
                    "type": "string",
                    "format": "uuid",
                    "x-nullable": true
                },
                "student": {
                    "title": "Student",
                    "type": "string"
                },
                "enrollment": {
                    "title": "Enrollment",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "BookMark": {
            "required": [
                "user",
                "course"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "user": {
                    "title": "User",
                    "type": "string",
                    "format": "uuid"
                },
                "course": {
                    "title": "Course",
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "LessonContent": {
            "required": [
                "sub_section"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "lesson_components": {
                    "title": "Lesson components",
                    "type": "string",
                    "readOnly": true
                },
                "position_id": {
                    "title": "Position id",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 150,
                    "x-nullable": true
                },
                "release_date": {
                    "title": "Release date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "publication_status": {
                    "title": "Publication status",
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3,
                        4
                    ]
                },
                "discussion": {
                    "title": "Discussion",
                    "type": "boolean"
                },
                "sub_section": {
                    "title": "Sub section",
                    "type": "string",
                    "format": "uuid"
                },
                "visible_to": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "uniqueItems": true
                }
            }
        },
        "SubSectionContent": {
            "required": [
                "sub_section_lessons",
                "section"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "sub_section_lessons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LessonContent"
                    }
                },
                "position_id": {
                    "title": "Position id",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 150,
                    "x-nullable": true
                },
                "overview": {
                    "title": "Overview",
                    "type": "string",
                    "maxLength": 250,
                    "x-nullable": true
                },
                "release_date": {
                    "title": "Release date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "publication_status": {
                    "title": "Publication status",
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3,
                        4
                    ]
                },
                "section": {
                    "title": "Section",
                    "type": "string",
                    "format": "uuid"
                },
                "visible_to": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "uniqueItems": true
                },
                "read_only": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "uniqueItems": true
                },
                "read_write": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "uniqueItems": true
                }
            }
        },
        "SectionContent": {
            "required": [
                "section_sub_sections",
                "course"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "section_sub_sections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SubSectionContent"
                    }
                },
                "position_id": {
                    "title": "Position id",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 150,
                    "x-nullable": true
                },
                "overview": {
                    "title": "Overview",
                    "type": "string",
                    "maxLength": 250,
                    "x-nullable": true
                },
                "release_date": {
                    "title": "Release date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "publication_status": {
                    "title": "Publication status",
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3,
                        4
                    ]
                },
                "course": {
                    "title": "Course",
                    "type": "string",
                    "format": "uuid"
                },
                "visible_to": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "uniqueItems": true
                }
            }
        },
        "CourseContent": {
            "required": [
                "course_sections",
                "name",
                "code",
                "institution",
                "author"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "course_sections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SectionContent"
                    }
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 1
                },
                "run": {
                    "title": "Run",
                    "type": "string",
                    "maxLength": 150,
                    "x-nullable": true
                },
                "card_image": {
                    "title": "Card image",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true,
                    "format": "uri"
                },
                "intro_video": {
                    "title": "Intro video",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true,
                    "format": "uri"
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 150,
                    "x-nullable": true
                },
                "overview": {
                    "title": "Overview",
                    "type": "string",
                    "maxLength": 250,
                    "x-nullable": true
                },
                "learning_expectation": {
                    "title": "Learning expectation",
                    "type": "string",
                    "maxLength": 250,
                    "x-nullable": true
                },
                "curriculum": {
                    "title": "Curriculum",
                    "type": "string",
                    "maxLength": 250,
                    "x-nullable": true
                },
                "level": {
                    "title": "Level",
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3
                    ]
                },
                "enrolment_type": {
                    "title": "Enrolment type",
                    "type": "integer",
                    "enum": [
                        1,
                        2
                    ]
                },
                "entrance_exam_required": {
                    "title": "Entrance exam required",
                    "type": "boolean"
                },
                "cost": {
                    "title": "Cost",
                    "type": "number",
                    "x-nullable": true
                },
                "auditing": {
                    "title": "Auditing",
                    "type": "boolean"
                },
                "course_pacing": {
                    "title": "Course pacing",
                    "type": "integer",
                    "enum": [
                        1,
                        2
                    ]
                },
                "course_start_date_time": {
                    "title": "Course start date time",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "course_end_date_time": {
                    "title": "Course end date time",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "enrolment_start_date_time": {
                    "title": "Enrolment start date time",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "enrolment_end_date_time": {
                    "title": "Enrolment end date time",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "course_language": {
                    "title": "Course language",
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                    ]
                },
                "requirement_hours_per_week": {
                    "title": "Requirement hours per week",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "requirement_no_of_week": {
                    "title": "Requirement no of week",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "grace_period_after_deadline": {
                    "title": "Grace period after deadline",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "publication_status": {
                    "title": "Publication status",
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3,
                        4
                    ]
                },
                "institution": {
                    "title": "Institution",
                    "type": "string",
                    "format": "uuid"
                },
                "author": {
                    "title": "Author",
                    "type": "string"
                },
                "prerequisite": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "uniqueItems": true
                },
                "authoring_team": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true
                }
            }
        },
        "LessonId": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 150,
                    "x-nullable": true
                },
                "position_id": {
                    "title": "Position id",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "lesson_components": {
                    "title": "Lesson components",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "SubSectionId": {
            "required": [
                "sub_section_lessons"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 150,
                    "x-nullable": true
                },
                "position_id": {
                    "title": "Position id",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "sub_section_lessons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LessonId"
                    }
                }
            }
        },
        "SectionId": {
            "required": [
                "section_sub_sections"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 150,
                    "x-nullable": true
                },
                "position_id": {
                    "title": "Position id",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "section_sub_sections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SubSectionId"
                    }
                }
            }
        },
        "CourseId": {
            "required": [
                "course_sections",
                "name",
                "code",
                "institution",
                "author"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "course_sections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SectionId"
                    }
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 1
                },
                "run": {
                    "title": "Run",
                    "type": "string",
                    "maxLength": 150,
                    "x-nullable": true
                },
                "card_image": {
                    "title": "Card image",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true,
                    "format": "uri"
                },
                "intro_video": {
                    "title": "Intro video",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true,
                    "format": "uri"
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 150,
                    "x-nullable": true
                },
                "overview": {
                    "title": "Overview",
                    "type": "string",
                    "maxLength": 250,
                    "x-nullable": true
                },
                "learning_expectation": {
                    "title": "Learning expectation",
                    "type": "string",
                    "maxLength": 250,
                    "x-nullable": true
                },
                "curriculum": {
                    "title": "Curriculum",
                    "type": "string",
                    "maxLength": 250,
                    "x-nullable": true
                },
                "level": {
                    "title": "Level",
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3
                    ]
                },
                "enrolment_type": {
                    "title": "Enrolment type",
                    "type": "integer",
                    "enum": [
                        1,
                        2
                    ]
                },
                "entrance_exam_required": {
                    "title": "Entrance exam required",
                    "type": "boolean"
                },
                "cost": {
                    "title": "Cost",
                    "type": "number",
                    "x-nullable": true
                },
                "auditing": {
                    "title": "Auditing",
                    "type": "boolean"
                },
                "course_pacing": {
                    "title": "Course pacing",
                    "type": "integer",
                    "enum": [
                        1,
                        2
                    ]
                },
                "course_start_date_time": {
                    "title": "Course start date time",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "course_end_date_time": {
                    "title": "Course end date time",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "enrolment_start_date_time": {
                    "title": "Enrolment start date time",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "enrolment_end_date_time": {
                    "title": "Enrolment end date time",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "course_language": {
                    "title": "Course language",
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                    ]
                },
                "requirement_hours_per_week": {
                    "title": "Requirement hours per week",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "requirement_no_of_week": {
                    "title": "Requirement no of week",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "grace_period_after_deadline": {
                    "title": "Grace period after deadline",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "publication_status": {
                    "title": "Publication status",
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3,
                        4
                    ]
                },
                "institution": {
                    "title": "Institution",
                    "type": "string",
                    "format": "uuid"
                },
                "author": {
                    "title": "Author",
                    "type": "string"
                },
                "prerequisite": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "uniqueItems": true
                },
                "authoring_team": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true
                }
            }
        },
        "Course": {
            "required": [
                "name",
                "code",
                "institution",
                "author"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 1
                },
                "run": {
                    "title": "Run",
                    "type": "string",
                    "maxLength": 150,
                    "x-nullable": true
                },
                "card_image": {
                    "title": "Card image",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true,
                    "format": "uri"
                },
                "intro_video": {
                    "title": "Intro video",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true,
                    "format": "uri"
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 150,
                    "x-nullable": true
                },
                "overview": {
                    "title": "Overview",
                    "type": "string",
                    "maxLength": 250,
                    "x-nullable": true
                },
                "learning_expectation": {
                    "title": "Learning expectation",
                    "type": "string",
                    "maxLength": 250,
                    "x-nullable": true
                },
                "curriculum": {
                    "title": "Curriculum",
                    "type": "string",
                    "maxLength": 250,
                    "x-nullable": true
                },
                "level": {
                    "title": "Level",
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3
                    ]
                },
                "enrolment_type": {
                    "title": "Enrolment type",
                    "type": "integer",
                    "enum": [
                        1,
                        2
                    ]
                },
                "entrance_exam_required": {
                    "title": "Entrance exam required",
                    "type": "boolean"
                },
                "cost": {
                    "title": "Cost",
                    "type": "number",
                    "x-nullable": true
                },
                "auditing": {
                    "title": "Auditing",
                    "type": "boolean"
                },
                "course_pacing": {
                    "title": "Course pacing",
                    "type": "integer",
                    "enum": [
                        1,
                        2
                    ]
                },
                "course_start_date_time": {
                    "title": "Course start date time",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "course_end_date_time": {
                    "title": "Course end date time",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "enrolment_start_date_time": {
                    "title": "Enrolment start date time",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "enrolment_end_date_time": {
                    "title": "Enrolment end date time",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "course_language": {
                    "title": "Course language",
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                    ]
                },
                "requirement_hours_per_week": {
                    "title": "Requirement hours per week",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "requirement_no_of_week": {
                    "title": "Requirement no of week",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "grace_period_after_deadline": {
                    "title": "Grace period after deadline",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "publication_status": {
                    "title": "Publication status",
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3,
                        4
                    ]
                },
                "institution": {
                    "title": "Institution",
                    "type": "string",
                    "format": "uuid"
                },
                "author": {
                    "title": "Author",
                    "type": "string"
                },
                "prerequisite": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "uniqueItems": true
                },
                "authoring_team": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true
                }
            }
        },
        "DiscussionComponent": {
            "required": [
                "lesson"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "position_id": {
                    "title": "Position id",
                    "type": "string",
                    "maxLength": 150,
                    "x-nullable": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 150,
                    "x-nullable": true
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 150,
                    "x-nullable": true
                },
                "component_type": {
                    "title": "Component type",
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3,
                        4
                    ]
                },
                "date_started": {
                    "title": "Date started",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "lesson": {
                    "title": "Lesson",
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "GapsGroup": {
            "required": [
                "members"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "group_type": {
                    "title": "Group type",
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3
                    ]
                },
                "course": {
                    "title": "Course",
                    "type": "string",
                    "format": "uuid",
                    "x-nullable": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "uniqueItems": true
                }
            }
        },
        "HTMLComponent": {
            "required": [
                "lesson"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "position_id": {
                    "title": "Position id",
                    "type": "string",
                    "maxLength": 150,
                    "x-nullable": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 150,
                    "x-nullable": true
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 150,
                    "x-nullable": true
                },
                "component_type": {
                    "title": "Component type",
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3,
                        4
                    ]
                },
                "content_type": {
                    "title": "Content type",
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3
                    ]
                },
                "embedded_url": {
                    "title": "Embedded url",
                    "type": "string",
                    "format": "uri",
                    "maxLength": 200,
                    "x-nullable": true
                },
                "mobile_video": {
                    "title": "Mobile video",
                    "type": "string",
                    "format": "uri",
                    "maxLength": 200,
                    "x-nullable": true
                },
                "html_text": {
                    "title": "Html text",
                    "type": "string",
                    "x-nullable": true
                },
                "lesson": {
                    "title": "Lesson",
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "Institution": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 150,
                    "x-nullable": true
                },
                "admin": {
                    "title": "Admin",
                    "type": "string",
                    "format": "uuid",
                    "x-nullable": true
                }
            }
        },
        "Lesson": {
            "required": [
                "sub_section"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "position_id": {
                    "title": "Position id",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 150,
                    "x-nullable": true
                },
                "release_date": {
                    "title": "Release date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "publication_status": {
                    "title": "Publication status",
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3,
                        4
                    ]
                },
                "discussion": {
                    "title": "Discussion",
                    "type": "boolean"
                },
                "sub_section": {
                    "title": "Sub section",
                    "type": "string",
                    "format": "uuid"
                },
                "visible_to": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "uniqueItems": true
                }
            }
        },
        "Resource": {
            "required": [
                "name",
                "description",
                "author",
                "course"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 200,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "minLength": 1
                },
                "file_type": {
                    "title": "File type",
                    "type": "string",
                    "enum": [
                        "html",
                        "video",
                        "image"
                    ]
                },
                "file": {
                    "title": "File",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true,
                    "format": "uri"
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "updated": {
                    "title": "Updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "author": {
                    "title": "Author",
                    "type": "string"
                },
                "course": {
                    "title": "Course",
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "ResponseSheet": {
            "required": [
                "problem",
                "student"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "updated": {
                    "title": "Updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "show_weighted_score": {
                    "title": "Show weighted score",
                    "type": "boolean"
                },
                "remark": {
                    "title": "Remark",
                    "type": "string",
                    "x-nullable": true
                },
                "assessment_score": {
                    "title": "Assessment score",
                    "type": "number",
                    "x-nullable": true
                },
                "weighted_score": {
                    "title": "Weighted score",
                    "type": "number",
                    "x-nullable": true
                },
                "course": {
                    "title": "Course",
                    "type": "string",
                    "format": "uuid",
                    "x-nullable": true
                },
                "problem": {
                    "title": "Problem",
                    "type": "string"
                },
                "student": {
                    "title": "Student",
                    "type": "string"
                },
                "enrollment": {
                    "title": "Enrollment",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "Section": {
            "required": [
                "course"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "position_id": {
                    "title": "Position id",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 150,
                    "x-nullable": true
                },
                "overview": {
                    "title": "Overview",
                    "type": "string",
                    "maxLength": 250,
                    "x-nullable": true
                },
                "release_date": {
                    "title": "Release date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "publication_status": {
                    "title": "Publication status",
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3,
                        4
                    ]
                },
                "course": {
                    "title": "Course",
                    "type": "string",
                    "format": "uuid"
                },
                "visible_to": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "uniqueItems": true
                }
            }
        },
        "SubSection": {
            "required": [
                "section"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "position_id": {
                    "title": "Position id",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 150,
                    "x-nullable": true
                },
                "overview": {
                    "title": "Overview",
                    "type": "string",
                    "maxLength": 250,
                    "x-nullable": true
                },
                "release_date": {
                    "title": "Release date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "publication_status": {
                    "title": "Publication status",
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3,
                        4
                    ]
                },
                "section": {
                    "title": "Section",
                    "type": "string",
                    "format": "uuid"
                },
                "visible_to": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "uniqueItems": true
                },
                "read_only": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "uniqueItems": true
                },
                "read_write": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "uniqueItems": true
                }
            }
        },
        "VideoComponent": {
            "required": [
                "lesson"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "position_id": {
                    "title": "Position id",
                    "type": "string",
                    "maxLength": 150,
                    "x-nullable": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 150,
                    "x-nullable": true
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 150,
                    "x-nullable": true
                },
                "component_type": {
                    "title": "Component type",
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3,
                        4
                    ]
                },
                "video": {
                    "title": "Video",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true,
                    "format": "uri"
                },
                "embedded_url": {
                    "title": "Embedded url",
                    "type": "string",
                    "format": "uri",
                    "maxLength": 200,
                    "x-nullable": true
                },
                "video_type": {
                    "title": "Video type",
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3
                    ]
                },
                "lesson": {
                    "title": "Lesson",
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "Like": {
            "required": [
                "message",
                "user"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "liked": {
                    "title": "Liked",
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3
                    ]
                },
                "date_liked": {
                    "title": "Date liked",
                    "type": "string",
                    "format": "date-time"
                },
                "message": {
                    "title": "Message",
                    "type": "integer"
                },
                "user": {
                    "title": "User",
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "Message": {
            "required": [
                "text",
                "discussion",
                "sender"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "text": {
                    "title": "Text",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "updated": {
                    "title": "Updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "discussion": {
                    "title": "Discussion",
                    "type": "string"
                },
                "sender": {
                    "title": "Sender",
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "UserProfile": {
            "required": [
                "email"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "email": {
                    "title": "Email",
                    "type": "string",
                    "format": "email",
                    "maxLength": 254,
                    "minLength": 1
                },
                "first_name": {
                    "title": "First name",
                    "type": "string",
                    "maxLength": 150,
                    "x-nullable": true
                },
                "last_name": {
                    "title": "Last name",
                    "type": "string",
                    "maxLength": 150,
                    "x-nullable": true
                },
                "phone_number": {
                    "title": "Phone number",
                    "type": "string",
                    "maxLength": 150,
                    "x-nullable": true
                }
            }
        },
        "ReadAuthorProfile": {
            "required": [
                "profile"
            ],
            "type": "object",
            "properties": {
                "profile": {
                    "$ref": "#/definitions/UserProfile"
                },
                "institution": {
                    "title": "Institution",
                    "type": "string",
                    "format": "uuid",
                    "x-nullable": true
                }
            }
        },
        "AuthorProfile": {
            "required": [
                "profile"
            ],
            "type": "object",
            "properties": {
                "profile": {
                    "title": "Profile",
                    "type": "string",
                    "format": "uuid"
                },
                "institution": {
                    "title": "Institution",
                    "type": "string",
                    "format": "uuid",
                    "x-nullable": true
                }
            }
        },
        "StudentProfile": {
            "required": [
                "profile"
            ],
            "type": "object",
            "properties": {
                "profile": {
                    "title": "Profile",
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "ReadStudentProfile": {
            "required": [
                "profile"
            ],
            "type": "object",
            "properties": {
                "profile": {
                    "$ref": "#/definitions/UserProfile"
                }
            }
        }
    }
}